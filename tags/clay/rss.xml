<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clay on whatacold&#39;s space</title>
    <link>https://whatacold.io/tags/clay/</link>
    <description>Recent content in Clay on whatacold&#39;s space</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>whatacold@gmail.com (whatacold)</managingEditor>
    <webMaster>whatacold@gmail.com (whatacold)</webMaster>
    <lastBuildDate>Sat, 07 Dec 2024 22:38:07 +0800</lastBuildDate>
    <atom:link href="https://whatacold.io/tags/clay/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Few Quick Notes About babashka/fs</title>
      <link>https://whatacold.io/blog/2024-12-07-babashka-fs-notes/</link>
      <pubDate>Sat, 07 Dec 2024 22:24:41 +0800</pubDate><author>whatacold@gmail.com (whatacold)</author>
      <guid>https://whatacold.io/blog/2024-12-07-babashka-fs-notes/</guid>
      <description>Recently I&amp;#39;ve used babashka/fs a little bit, here are some quick notes for it:&#xA;Path vs File Use Path whenever possible, according to this SO answer to &amp;#34;Java: Path vs File&amp;#34;. This is actually Java related. It&amp;#39;s ok to use a path as a key for a clojure map. At my first try, I somehow came to the conclusion that it&amp;#39;s not ok, while I was refactoring the live reload for clay.</description>
    </item>
    <item>
      <title>Doing Unit test in Clojure Is Easy</title>
      <link>https://whatacold.io/blog/2024-11-27-clojure-unit-test/</link>
      <pubDate>Thu, 28 Nov 2024 23:10:56 +0800</pubDate><author>whatacold@gmail.com (whatacold)</author>
      <guid>https://whatacold.io/blog/2024-11-27-clojure-unit-test/</guid>
      <description>While refactoring the live reload feature of Clay, I realized I&amp;#39;d better break long functions into smaller and functional ones (as many as I can), which is also a common practice in the clojure community.&#xA;Small pure functions not only are easy to verify on the development process (using a REPL), but also are easy to test. And unit tests are easy to write in clojure, just use deftest from clojure.</description>
    </item>
    <item>
      <title>clj-async-profiler Rocks</title>
      <link>https://whatacold.io/blog/2024-11-28-beholder-clj-async-profiler/</link>
      <pubDate>Thu, 28 Nov 2024 22:23:32 +0800</pubDate><author>whatacold@gmail.com (whatacold)</author>
      <guid>https://whatacold.io/blog/2024-11-28-beholder-clj-async-profiler/</guid>
      <description>While developing the live reload feature for Clay, a minimalistic Clojure tool for data visualization and literate programming, I found that it constantly takes ~1 minute for beholder to watch a directory. After some code inspect, I was still having no idea why it happened.&#xA;So I decided to use a profiler to find out what&amp;#39;s going one under the hood, and Google immediately took me to clj-async-profiler. It&amp;#39;s easy to set up following its basic usage docs:</description>
    </item>
  </channel>
</rss>

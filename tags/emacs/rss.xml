<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emacs on Ken Huang</title>
    <link>https://whatacold.io/tags/emacs/</link>
    <description>Recent content in Emacs on Ken Huang</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>whatacold@gmail.com (Ken Huang)</managingEditor>
    <webMaster>whatacold@gmail.com (Ken Huang)</webMaster>
    <lastBuildDate>Fri, 21 Feb 2025 21:42:36 +0800</lastBuildDate>
    <atom:link href="https://whatacold.io/tags/emacs/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting Started with Cider for Clojure Programming</title>
      <link>https://whatacold.io/blog/2024-12-22-getting-started-with-cider/</link>
      <pubDate>Sun, 22 Dec 2024 17:17:15 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2024-12-22-getting-started-with-cider/</guid>
      <description>Here is the outline for my cider tutorial on YouTube, covering basic things you need to know to get started with cider, and starting exploring the fun of clojure programming with the REPL-driven programming approach.&#xA;Jack In to a REPL C-c M-j (cider-jack-in-clj) start a nREPL and jack in. It works in a project or with a sole .clj file. M-x cider-connect-clj run the command and then fill in hostname and port.</description>
    </item>
    <item>
      <title>Join Every N Lines By A Separator in Emacs</title>
      <link>https://whatacold.io/blog/2023-11-25-emacs-join-every-n-lines/</link>
      <pubDate>Sat, 25 Nov 2023 12:24:24 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2023-11-25-emacs-join-every-n-lines/</guid>
      <description>It has been some time since I came along the idea of the w/join-lines command to join lines. After that, sometimes I found that it would be even better to join every a few lines.&#xA;Let&amp;#39;s see the example below, suppose we&amp;#39;ve copies some data from somewhere, and now we want to yank it into an Emacs buffer and slightly modify it to be like an matrix.&#xA;That is, make it from:</description>
    </item>
    <item>
      <title>Restore Emacs&#39; Window Layouts</title>
      <link>https://whatacold.io/blog/2023-11-19-emacs-winner-mode/</link>
      <pubDate>Sun, 19 Nov 2023 13:02:42 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2023-11-19-emacs-winner-mode/</guid>
      <description>If you&amp;#39;ve been using Emacs for a while, I bet you must have encountered the annoying problem that your Emacs window layout gets messed up after some operations, such as looking for a help (e.g. C-h k), or checking things in the magit status buffer.&#xA;I&amp;#39;m happy if I can just get back to the previous layout that I had before, and guess what? Emacs happens to have that capability built in â€“ the winner-mode package, what a surprise!</description>
    </item>
    <item>
      <title>Emphasize Text By Dragging Mouse in Org-mode</title>
      <link>https://whatacold.io/blog/2023-08-14-org-emphasis-dragging-mouse/</link>
      <pubDate>Mon, 14 Aug 2023 22:48:20 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2023-08-14-org-emphasis-dragging-mouse/</guid>
      <description>Long story short, I came up with an idea to emphasize content while I was reviewing an org-mode document a few months ago after I was tired of typing tedious * around the content repeatedly. And I&amp;#39;ve been longing for this feature since then, because I was unfamiliar with mouse-based key bindings, and neither did I have the time to investigate it.&#xA;Today I finally nailed it down while I was attending a boring meeting, and it turned out to be quite simple.</description>
    </item>
    <item>
      <title>Join Lines By A Separator in Emacs</title>
      <link>https://whatacold.io/blog/2023-06-12-emacs-join-lines/</link>
      <pubDate>Mon, 12 Jun 2023 22:23:12 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2023-06-12-emacs-join-lines/</guid>
      <description>So sometimes I need to join a few lines by a separator while I&amp;#39;m coding, for example, turn the below lines,&#xA;foo bar baz into foo + bar + baz. (This is a silly example, I will update if I come up with a better one :-P )&#xA;When I was in a rush in the past, I usually baked a keyboard macro temporarily and then applied it to achieve this goal, thought reliable, it&amp;#39;s a little bit cumbersome to record it.</description>
    </item>
    <item>
      <title>Hugo Blogging in Emacs</title>
      <link>https://whatacold.io/blog/2022-10-10-emacs-hugo-blogging/</link>
      <pubDate>Mon, 10 Oct 2022 22:50:48 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2022-10-10-emacs-hugo-blogging/</guid>
      <description>When I started to use Hugo to write this blog last year, I noticed that there is an easy-hugo package of Emacs that there are many people use it. So I installed it that time, but I didn&amp;#39;t use many of its features along the way. The only command I used was easy-hugo-current-time. I used it to update the Hugo timestamps manually as in the format of 2022-10-15T09:45:35+08:00.&#xA;My most desirable feature is to use it to select tags easily when I start to write a new post, but I never got it to work.</description>
    </item>
    <item>
      <title>Auto-complete Accounts From Other Beancount Files in Emacs</title>
      <link>https://whatacold.io/blog/2022-09-10-emacs-beancount-account-files/</link>
      <pubDate>Sat, 10 Sep 2022 11:13:38 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2022-09-10-emacs-beancount-account-files/</guid>
      <description>Auto-complete accounts from another accounts.bean file If you&amp;#39;re using Beancount with Emacs, you may be using beancount-mode. It can auto-complete the accounts defined in the current buffer when we are typing in new transactions so that we can do it more efficiently.&#xA;But it can only auto-complete the accounts from the current buffer, which makes it less useful when we have a stand-alone file or a few files of beancount accounts.</description>
    </item>
    <item>
      <title>A Bookmarklet for Copying a Link as an Org-mode Link</title>
      <link>https://whatacold.io/blog/2022-08-08-org-link-bookmarklet/</link>
      <pubDate>Mon, 08 Aug 2022 23:33:05 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2022-08-08-org-link-bookmarklet/</guid>
      <description>In this blog post, I&amp;#39;d like to share a bookmarklet for copying a web page&amp;#39;s URL as an org-mode link on Firefox, Chrome, or whatever web browsers support bookmarklets.&#xA;It&amp;#39;s handy when the URL isn&amp;#39;t SEO-friendly, which means you can&amp;#39;t tell what its content is about at first glance of the URL. So a little description text on the link would help.&#xA;Here is the bookmarklet:&#xA;javascript:window.prompt(&amp;#34;Copy to clipboard: Ctrl+C, Esc&amp;#34;, &amp;#34;[[&amp;#34; + document.</description>
    </item>
    <item>
      <title>Emacs Debugging Techniques</title>
      <link>https://whatacold.io/blog/2022-07-17-emacs-elisp-debug/</link>
      <pubDate>Sun, 17 Jul 2022 09:57:31 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2022-07-17-emacs-elisp-debug/</guid>
      <description>If you are new to Emacs, you may run into some errors, especially after you copied some elisp snippets from the Internet or elsewhere. Don&amp;#39;t panic! It happens, it&amp;#39;s just part of the learning process. Even an experienced Emacs user could run into there issues from time to time.&#xA;But in order to ease the pain, I will introduce a bunch of Emacs built-in features to help you troubleshoot and eventually solve the problems by yourself in this post.</description>
    </item>
    <item>
      <title>Duplicate the current line in Emacs</title>
      <link>https://whatacold.io/blog/2022-05-23-emacs-duplicate-line/</link>
      <pubDate>Mon, 23 May 2022 21:29:28 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2022-05-23-emacs-duplicate-line/</guid>
      <description>Duplicate the current in Emacs Duplicating the current line is frequent editing for me when I am coding. Initially, I copied a snippet as a command in Emacs from the Internet:&#xA;(defun w/duplicate-line() &amp;#34;Duplicate the current line.&amp;#34; (interactive) (move-beginning-of-line 1) (kill-line) (yank) (open-line 1) (next-line 1) (yank)) Most of the time, I was happy with it, but it has mainly two drawbacks:&#xA;It cannot keep the column position when moving to the next line It messes up with the yank ring as it yanks the text under the hood So today, I took some time to fix these two problems, and I also want it to be capable of commenting the current line out if I prefix the command.</description>
    </item>
    <item>
      <title>Adjust the laptop&#39;s screen brightness in Emacs</title>
      <link>https://whatacold.io/blog/2022-05-21-adjust-screen-brightness-emacs/</link>
      <pubDate>Sat, 21 May 2022 11:50:25 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2022-05-21-adjust-screen-brightness-emacs/</guid>
      <description>Adjust the screen brightness in Emacs If you&amp;#39;re using i3wm on Linux, how do you adjust the laptop&amp;#39;s screen brightness?&#xA;Most of the time, I use the laptop with an external monitor. But when I am out, I have no monitors. And it seems no easy way to adjust the brightness in i3wm. Being too bright or dim is terrible for the eyes.&#xA;Recently, I found a command-line tool called brightnessctl, which can adjust the brightness in a terminal.</description>
    </item>
    <item>
      <title>How to Kill a &#34;Visible&#34; Buffer Quickly in Emacs</title>
      <link>https://whatacold.io/blog/2022-04-09-emacs-kill-other-buffer/</link>
      <pubDate>Sat, 09 Apr 2022 23:11:36 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2022-04-09-emacs-kill-other-buffer/</guid>
      <description>Selecting Emacs windows using ace-window Recently I&amp;#39;ve been building a simple Emacs config for myself, along the way I re-discovered some fantastic packages, for example, I found that ace-window is a simple yet powerful package to enhance the default other-window command to select other windows quickly when it has more than two windows in a frame.&#xA;I replaced the key binding of other-window to ace-window by simply doing (global-set-key (kbd &amp;#34;C-x o&amp;#34;) #&amp;#39;ace-window), then when there are &amp;gt;2 windows, it will show a white-in-red number at the top-left corner for every window, hit the number (1, 2, 3, â€¦) and then Emacs will select the corresponding window (as demonstrated in the above screenshot).</description>
    </item>
    <item>
      <title>Eglot for Better Programming Experience in Emacs</title>
      <link>https://whatacold.io/blog/2022-01-22-emacs-eglot-lsp/</link>
      <pubDate>Sat, 22 Jan 2022 11:36:18 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2022-01-22-emacs-eglot-lsp/</guid>
      <description>LSP, or Language Server Protocol, makes programming easier by introducing features like more precise auto-completion and definition lookup. It may have scratched your itches, and you may wonder what the experience is like in Emacs.&#xA;Emacs has mainly two LSP clients out there, eglot and lsp-mode. Eglot is lightweight, and it could almost run out of the box. So in this post I will briefly show you how to use eglot.</description>
    </item>
    <item>
      <title>Language Shadowing with subed in Emacs</title>
      <link>https://whatacold.io/blog/2022-01-12-language-shadowing-with-subed-emacs/</link>
      <pubDate>Wed, 12 Jan 2022 21:41:54 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2022-01-12-language-shadowing-with-subed-emacs/</guid>
      <description>So I&amp;#39;m trying to improve my English speaking skill by shadowing while watching TV episodes. The workflow before was to loop over video clips using mpv:&#xA;hit l to mark the start of the loop play the video and wait for it to be at the end of the loop hit l again to mark the end Then mpv will loop over the clip, it basically works, but it&amp;#39;s a bit hard and tedious to set the start and end precisely.</description>
    </item>
    <item>
      <title>Writing a Python Script in Emacs in 45 Minutes!</title>
      <link>https://whatacold.io/blog/2021-12-11-writing-python-in-emacs/</link>
      <pubDate>Sat, 11 Dec 2021 09:24:53 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2021-12-11-writing-python-in-emacs/</guid>
      <description>Note: watch my live coding session of this article: Intro If you&amp;#39;ve heard some rumors of Emacs that it has a very steep learning curve (or that Emacs makes a computer slow), you may be too scared to look at it. It indeed has some learning curve (learning anything does have one), but it isn&amp;#39;t very steep. I learned this after getting my hands dirty with Emacs a few years ago.</description>
    </item>
    <item>
      <title>Send Notifications from Emacs with i3wm and Dunst</title>
      <link>https://whatacold.io/blog/2021-07-17-emacs-i3wm-dunst/</link>
      <pubDate>Sat, 17 Jul 2021 12:22:10 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2021-07-17-emacs-i3wm-dunst/</guid>
      <description>I barely use notifications, but recently I think it&amp;#39;s a valuable way to remind me things like helping me nurture habits, or to notify me of emergencies like a critically low laptop battery.&#xA;So I try to integrate notifications to org-mode and Emacs today.&#xA;The org-notify package from org-contrib (install it by (package-install &amp;#39;org-contrib) ) could do this job easily before, so I first test it in the minibuffer with (org-notify &amp;#34;test&amp;#34;).</description>
    </item>
    <item>
      <title>Generate Call Graphs Using Doxygen in Emacs</title>
      <link>https://whatacold.io/blog/2020-08-22-generate-call-graphs-using-doxygen-in-emacs/</link>
      <pubDate>Sat, 22 Aug 2020 18:57:00 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2020-08-22-generate-call-graphs-using-doxygen-in-emacs/</guid>
      <description>Doxygen is a nice tool for generating documentations for well-annotated C/C++ projects, the one feature that I like most is generating call graphs and class diagrams, so that I can learn a project quickly by browsing the diagrams from a higher point of view.&#xA;I take the following steps to generate call graphs for a project on terminals on Linux:&#xA;cd /path/to/a/project/, and generate a template config file by doxygen -s -g doxygen.</description>
    </item>
    <item>
      <title>A Trick to Troubleshoot Emacs Subprocess Creating</title>
      <link>https://whatacold.io/blog/2020-05-30-a-trick-to-troubleshoot-emacs-subprocess-creating/</link>
      <pubDate>Sat, 30 May 2020 11:52:00 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2020-05-30-a-trick-to-troubleshoot-emacs-subprocess-creating/</guid>
      <description>There are many packages of Emacs that leverage subprocesses to do their jobs, Magit, eglot, elpy, to name a few. And there are times that a subprocess doesn&amp;#39;t work as expected, for example, Magit is slow, and you&amp;#39;re sure that it&amp;#39;s ok when running git commands on shell. So how to spot these problems effectively and quickly?&#xA;The problem is that we don&amp;#39;t know what&amp;#39;s going on exactly, so here I want to share a few Elisp advices to make the subprocess creating visible, and print the exact program and its arguments to the *Message* buffer.</description>
    </item>
    <item>
      <title>ppcompile: An Emacs Package to Help Coding Locally</title>
      <link>https://whatacold.io/blog/2020-03-07-ppcompile-to-help-stay-coding-locally/</link>
      <pubDate>Sat, 07 Mar 2020 23:50:00 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2020-03-07-ppcompile-to-help-stay-coding-locally/</guid>
      <description>If you are a C/C++ programmer like me, you may experience jumping around different machines to write and compile your code, or you may write code on different machines for different projects, and scp/rsync/ftp the projects around. It works, but it&amp;#39;s a bit tedious and takes too much burden on our brains.&#xA;For example, say I have two projects that should be compiled on their compiling machines respectively. There are two obvious workflows for writing code for them &amp;#34;simultaneously&amp;#34;:</description>
    </item>
    <item>
      <title>How To Revert a Series of Git Commits?</title>
      <link>https://whatacold.io/blog/2019-09-24-how-to-revert-a-series-of-commits-with-git/</link>
      <pubDate>Tue, 24 Sep 2019 23:14:00 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2019-09-24-how-to-revert-a-series-of-commits-with-git/</guid>
      <description>Sometimes, I need to revert a series of commits that I&amp;#39;ve already pushed, doing a git hard reset (git reset --hard) is not an option, as someone may already have new commits based on mine.&#xA;For example, assume that I&amp;#39;ve made a few commits like below:&#xA;65a2c62 * commit 10 25cad43 * commit 9 72ad583 * commit 8 ceebf9a * commit 7 acf8a11 * commit 6 28d526f * commit 5 63af1e2 * commit 4 982c71c * commit 3 0fb4c2d * commit 2 acf9da1 * commit 1 b5f9933 * commit 0 For whatever reason, I need to &amp;#34;drop&amp;#34; the changes made by commit 6 to commit 10, that is, go back to &amp;#34;commit 5&amp;#34; without deleting these commits.</description>
    </item>
    <item>
      <title>Generating org-mode Outlines for wikiHow Articles</title>
      <link>https://whatacold.io/blog/2019-07-20-generating-org-mode-outlines-for-wikihow-articles/</link>
      <pubDate>Sat, 20 Jul 2019 20:04:00 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2019-07-20-generating-org-mode-outlines-for-wikihow-articles/</guid>
      <description>Recently I found some great articles on wikiHow, then I want to keep notes of them in org-mode files.&#xA;At first, I manually copied the ToC of articles, but soon I found it&amp;#39;s tedious and takes a lot of time. Today I wrote a requests-based Python script to help me extract the ToCs (Table of Content) into org-mode outlines. It takes two arguments, the first one is the URL, the second one is the containing heading&amp;#39;s level for the generated ToC in org-mode.</description>
    </item>
    <item>
      <title>Understanding align-regexp of Emacs</title>
      <link>https://whatacold.io/blog/2019-07-20-understanding-align-regexp-of-emacs/</link>
      <pubDate>Sat, 20 Jul 2019 13:50:00 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2019-07-20-understanding-align-regexp-of-emacs/</guid>
      <description>Emacs&amp;#39; M-x align-regex is neat when I want to align some similar text, especially when we&amp;#39;re coding. I use its trivial version(without prefix arg) regularly on day-to-day programming work before.&#xA;For example, I can use it to align below code quickly by:&#xA;Choose the region M-x align-regexp and type = and Enter aaaaaaaaaaaaaa = fields[0] bbb = fields[1] cccccccc = fields[2] It will be aligned to below code, now it&amp;#39;s better to read:</description>
    </item>
    <item>
      <title>Fine-tune Curly Braces Style of Yasnippet Snippet on the Fly</title>
      <link>https://whatacold.io/blog/2019-02-24-fine-tune-style-of-yasnippet-snippet-on-the-fly/</link>
      <pubDate>Sun, 24 Feb 2019 16:48:00 +0800</pubDate><author>whatacold@gmail.com (Ken Huang)</author>
      <guid>https://whatacold.io/blog/2019-02-24-fine-tune-style-of-yasnippet-snippet-on-the-fly/</guid>
      <description>Yasnippet is a good friend to help us type less and write more, whenever we write some text snippets repeatedly. And there is also an official repository called yasnippet-snippets that contains various snippets for many programming languages (modes), so that we can have many snippets in no time by installing it.&#xA;But there is a little problem when it comes to conforming to different coding styles.&#xA;Take the if snippet for example, normally it will generate code like this:</description>
    </item>
  </channel>
</rss>
